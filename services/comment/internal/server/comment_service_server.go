// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: comment.proto

package server

import (
	"context"

	"GoFlix/services/comment/commentRpc"
	"GoFlix/services/comment/internal/logic"
	"GoFlix/services/comment/internal/svc"
)

type CommentServiceServer struct {
	svcCtx *svc.ServiceContext
	commentRpc.UnimplementedCommentServiceServer
}

func NewCommentServiceServer(svcCtx *svc.ServiceContext) *CommentServiceServer {
	return &CommentServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *CommentServiceServer) Comment(ctx context.Context, in *commentRpc.CommentReq) (*commentRpc.Empty, error) {
	l := logic.NewCommentLogic(ctx, s.svcCtx)
	return l.Comment(in)
}

func (s *CommentServiceServer) DelComment(ctx context.Context, in *commentRpc.DelCommentReq) (*commentRpc.Empty, error) {
	l := logic.NewDelCommentLogic(ctx, s.svcCtx)
	return l.DelComment(in)
}

func (s *CommentServiceServer) GetCommentListByHot(ctx context.Context, in *commentRpc.GetCommentListByHotReq) (*commentRpc.CommentListResp, error) {
	l := logic.NewGetCommentListByHotLogic(ctx, s.svcCtx)
	return l.GetCommentListByHot(in)
}

func (s *CommentServiceServer) GetCommentListByTime(ctx context.Context, in *commentRpc.GetCommentListByTimeReq) (*commentRpc.CommentListResp, error) {
	l := logic.NewGetCommentListByTimeLogic(ctx, s.svcCtx)
	return l.GetCommentListByTime(in)
}

func (s *CommentServiceServer) GetReplyCommentList(ctx context.Context, in *commentRpc.GetReplyCommentListReq) (*commentRpc.CommentListResp, error) {
	l := logic.NewGetReplyCommentListLogic(ctx, s.svcCtx)
	return l.GetReplyCommentList(in)
}

func (s *CommentServiceServer) GetCommentCount(ctx context.Context, in *commentRpc.GetCommentCountReq) (*commentRpc.GetCommentCountResp, error) {
	l := logic.NewGetCommentCountLogic(ctx, s.svcCtx)
	return l.GetCommentCount(in)
}
